openapi: '3.0.0'
info:
  title: 'QNX Team Blockchain Capstone Project'
  version: '1.0.0'
  description: >-
    Blockchain Capstone Project by Team QNX.

paths:
  "/api/health":
    get:
      tags:
      - Monitor Health

      operationId: monitorHealth
      summary: Get health status of app
      description: Get health status of app
      responses:
        default:
          description: Health check response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Server is up!"

  "/api/user/add":
    post:
      summary: Create new user
      tags:
      - User Enrollment
      description: Register user
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/definitions/userAddFarmerSource"
                - $ref: "#/definitions/userAddWholesalerSource"
            examples:
              farmer:
                $ref: "#/components/examples/userAddFarmerSource"
              wholesaler:
                $ref: "#/components/examples/userAddWholesalerSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: string
                      example: "User enrolled successfully"
                    
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"

  "/api/user/edit/{userId}/username":
    put:
      summary: Update username
      tags:
      - User Enrollment
      description: Update username
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: userId
            in: path
            description: User ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                username:
                  type: string
                  example: "username"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: string
                      example: "xxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                    
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/user/edit/{userId}/password":
    put:
      summary: Update password
      tags:
      - User Enrollment
      description: Update password
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: userId
            in: path
            description: User ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                password:
                  type: string
                  example: "password"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: string
                      example: "xxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                    
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/farmer/edit/{userId}":
    put:
      summary: Update farmer info
      tags:
      - Farmer
      description: Update farmer info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: userId
            in: path
            description: User ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                firstName:
                  type: string
                  example: "Jodie"
                lastName:
                  type: string
                  example: "Cristobal"
                addressLine:
                  type: string
                  example: "037 R. Higgins St., Brgy 185"
                city:
                  type: string
                  example: "La Trinidad"
                province:
                  type: string
                  example: "Benguet"
                zipcode:
                  type: string
                  example: "1300"
                latlong:
                  type: string
                  example: "14.543610, 120.994453"
                farmerType:
                  type: string
                  example: "crop"
                mainGoods:
                  type: string
                  example: "vegetable"
                mobile:
                  type: string
                  example: "09262449975"
                farmerDesc:
                  type: string
                  example: "Farmer from La Trinidad, Benguet. Farms Bahay Kubo vegetables. Don\u0027t worry it\u0027s organic"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: string
                      example: "xxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                    
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/wholesaler/edit/{userId}":
    put:
      summary: Update wholesaler info
      tags:
      - Wholesaler
      description: Update wholesaler info
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: userId
            in: path
            description: User ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                firstName:
                  type: string
                  example: "Jodie"
                lastName:
                  type: string
                  example: "Cristobal"
                storeName:
                  type: string
                  example: "Cristobal Wholesales"
                addressLine:
                  type: string
                  example: "037 R. Higgins St., Brgy 185"
                city:
                  type: string
                  example: "La Trinidad"
                province:
                  type: string
                  example: "Benguet"
                zipcode:
                  type: string
                  example: "1300"
                latlong:
                  type: string
                  example: "14.543610, 120.994453"
                mobile:
                  type: string
                  example: "09262449975"
                wholesalerDesc:
                  type: string
                  example: "Capitalist shit. Nuff said."
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: string
                      example: "xxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                    
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
  "/api/token":
    post:
      summary: Create access token 
      tags:
      - Access Token
      description: Get access token
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/accessTokenSource"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    result:
                      type: string
                      example: "xxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
                    
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"

  "/api/transactions":
    post:
      summary: Add transaction record
      tags:
      - Transactions
      description: Add transaction record
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                wholesalerId:
                  type: integer
                  example: 1
                goodsId:
                  type: integer
                  example: 1
                deliveryDesc:
                  type: string
                  example: "Placed in sack, securely tied."
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Transaction recorded successfully."
                    
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  "/api/transactions/{transactionId}":
    get:
      summary: Get transaction details via Transaction ID
      tags:
      - Transactions
      description: Get transaction details via Transaction ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: transactionId
            in: path
            description: Transaction ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    body:
                      type: object
                      properties:
                        transactionId:
                          type: integer
                          example: 2
                        wholesalerId:
                          type: integer
                          example: 1
                        goodsId:
                          type: integer
                          example: 1
                        status:
                          type: integer
                          example: 1
                        deliverySendDate:
                          type: string
                          example: "2020-12-10T18:32:17.000Z"
                        deliveryRecieveDate:
                          type: string
                          example: "2020-12-11T18:32:17.000Z"
                        deliveryDesc:
                          type: string
                          example: "Item well packed with breathable plastic"
                        createdAt:
                          type: string
                          example: "2020-12-10T18:32:17.000Z"
                        updatedAt:
                          type: string
                          example: "2020-12-11T18:32:17.000Z"   
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []

  "/api/goods":
    post:
      summary: Add goods record
      tags:
      - Goods
      description: Add goods record
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                farmerId:
                  type: integer
                  example: 1
                goodsName:
                  type: string
                  example: "Celery"
                quantityType:
                  type: string
                  example: "kilos"
                quantityValue:
                  type: integer
                  example: 5
                amountPerUnit:
                  type: integer
                  example: 20
                amount:
                  type: integer
                  example: 100
                additionalDesc:
                  type: string
                  example: "good freshly farmed celery."
                plantationDate:
                  type: string
                  example: "1586476800"
                harvestDate:
                  type: string
                  example: "1607624844"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Goods recorded successfully."
                    
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    get:
      summary: Get all goods details
      tags:
      - Goods
      description: Get all goods details
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    body:
                      type: array
                      items:
                        type: object
                        properties:
                          goodsId:
                            type: integer
                            example: 1
                          farmerId:
                            type: integer
                            example: 1
                          goodsName:
                            type: string
                            example: "Celery"
                          quantityType:
                            type: string
                            example: "kilos"
                          quantityValue:
                            type: integer
                            example: 5
                          amountPerUnit:
                            type: integer
                            example: 20
                          amount:
                            type: integer
                            example: 100
                          additionalDesc:
                            type: string
                            example: "good freshly farmed celery."
                          plantationDate:
                            type: string
                            example: "1586476800"
                          harvestDate:
                            type: string
                            example: "1607624844"
                          createdAt:
                            type: string
                            example: "2020-12-10T18:28:56.000Z"
                          updatedAt:
                            type: string
                            example: "2020-12-10T18:28:56.000Z" 
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    
  "/api/goods/{goodsId}":
    get:
      summary: Get goods details via goods ID
      tags:
      - Goods
      description: Get goods details via goods ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: goodsId
            in: path
            description: Goods ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    body:
                      type: object
                      properties:
                        goodsId:
                          type: integer
                          example: 1
                        farmerId:
                          type: integer
                          example: 1
                        goodsName:
                          type: string
                          example: "Celery"
                        quantityType:
                          type: string
                          example: "kilos"
                        quantityValue:
                          type: integer
                          example: 5
                        amountPerUnit:
                          type: integer
                          example: 20
                        amount:
                          type: integer
                          example: 100
                        additionalDesc:
                          type: string
                          example: "good freshly farmed celery."
                        plantationDate:
                          type: string
                          example: "1586476800"
                        harvestDate:
                          type: string
                          example: "1607624844"
                        createdAt:
                          type: string
                          example: "2020-12-10T18:28:56.000Z"
                        updatedAt:
                          type: string
                          example: "2020-12-10T18:28:56.000Z" 
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    put:
      summary: Update goods details via goods ID
      tags:
      - Goods
      description: Update goods details via goods ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: goodsId
            in: path
            description: Goods ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                farmerId:
                  type: integer
                  example: 1
                goodsName:
                  type: string
                  example: "Celery"
                quantityType:
                  type: string
                  example: "kilos"
                quantityValue:
                  type: integer
                  example: 5
                amountPerUnit:
                  type: integer
                  example: 20
                amount:
                  type: integer
                  example: 100
                additionalDesc:
                  type: string
                  example: "good freshly farmed celery."
                plantationDate:
                  type: string
                  example: "1586476800"
                harvestDate:
                  type: string
                  example: "1607624844"
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Record updated successfully."
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    delete:
      summary: Delete goods details via goods ID
      tags:
      - Goods
      description: Delete goods details via goods ID
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: goodsId
            in: path
            description: Goods ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Record deleted successfully."
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  "/api/goods/farmer/{farmerId}":
    get:
      summary: Get all goods details of a farmer by Farmer Id
      tags:
      - Goods
      description: Get all goods details of a farmer by Farmer Id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: farmerId
            in: path
            description: Farmer ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    body:
                      type: array
                      items:
                        type: object
                        properties:
                          goodsId:
                            type: integer
                            example: 1
                          farmerId:
                            type: integer
                            example: 1
                          goodsName:
                            type: string
                            example: "Celery"
                          quantityType:
                            type: string
                            example: "kilos"
                          quantityValue:
                            type: integer
                            example: 5
                          amountPerUnit:
                            type: integer
                            example: 20
                          amount:
                            type: integer
                            example: 100
                          additionalDesc:
                            type: string
                            example: "good freshly farmed celery."
                          plantationDate:
                            type: string
                            example: "1586476800"
                          harvestDate:
                            type: string
                            example: "1607624844"
                          createdAt:
                            type: string
                            example: "2020-12-10T18:28:56.000Z"
                          updatedAt:
                            type: string
                            example: "2020-12-10T18:28:56.000Z" 
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  "/api/reviews":
    post:
      summary: Add user review
      tags:
      - Reviews
      description: Add user review
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                userId:
                  type: integer
                  example: 1
                reviewerId:
                  type: integer
                  example: 2
                score:
                  type: float
                  example: 5
                reviewDesc:
                  type: string
                  example: "Excellent packaging. Would order again."
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Review recorded successfully."
                    
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    get:
      summary: Get all reviews
      tags:
      - Reviews
      description: Get all reviews
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    body:
                      type: array
                      items:
                        type: object
                        properties:
                          reviewId:
                            type: integer
                            example: 1
                          userId:
                            type: integer
                            example: 1
                          reviewerId:
                            type: integer
                            example: 2
                          score:
                            type: float
                            example: 5
                          reviewDesc:
                            type: string
                            example: "Excellent packaging. Would order again."
                          createdAt:
                            type: string
                            example: "2020-12-10T18:28:56.000Z"
                          updatedAt:
                            type: string
                            example: "2020-12-10T18:28:56.000Z" 
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  "/api/reviews/{reviewId}":
    get:
      summary: Get review details by Review Id
      tags:
      - Reviews
      description: Get review details by Review Id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: reviewId
            in: path
            description: Review ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    body:
                      type: object
                      properties:
                        reviewId:
                          type: integer
                          example: 1
                        userId:
                          type: integer
                          example: 1
                        reviewerId:
                          type: integer
                          example: 2
                        score:
                          type: float
                          example: 5
                        reviewDesc:
                          type: string
                          example: "Excellent packaging. Would order again."
                        createdAt:
                          type: string
                          example: "2020-12-10T18:28:56.000Z"
                        updatedAt:
                          type: string
                          example: "2020-12-10T18:28:56.000Z" 
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
    put:
      summary: Update user review
      tags:
      - Reviews
      description: Update user review
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: reviewId
            in: path
            description: Review ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                userId:
                  type: integer
                  example: 1
                reviewerId:
                  type: integer
                  example: 2
                score:
                  type: float
                  example: 5
                reviewDesc:
                  type: string
                  example: "Excellent packaging. Would order again."
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    message:
                      type: string
                      example: "Record updated successfully."
                    
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  "/api/reviews/user/{userId}":
    get:
      summary: Get review details by User Id
      tags:
      - Reviews
      description: Get review details by User Id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: userId
            in: path
            description: User ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    body:
                      type: object
                      properties:
                        reviewId:
                          type: integer
                          example: 1
                        userId:
                          type: integer
                          example: 1
                        reviewerId:
                          type: integer
                          example: 2
                        score:
                          type: float
                          example: 5
                        reviewDesc:
                          type: string
                          example: "Excellent packaging. Would order again."
                        createdAt:
                          type: string
                          example: "2020-12-10T18:28:56.000Z"
                        updatedAt:
                          type: string
                          example: "2020-12-10T18:28:56.000Z" 
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  "/api/reviews/reviewer/{reviewerId}":
    get:
      summary: Get review details by Reviewer Id
      tags:
      - Reviews
      description: Get review details by Reviewer Id
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
          - name: reviewerId
            in: path
            description: Reviewer ID
            required: true
            style: simple
            explode: false
            schema:
              type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      example: true
                    body:
                      type: object
                      properties:
                        reviewId:
                          type: integer
                          example: 1
                        userId:
                          type: integer
                          example: 1
                        reviewerId:
                          type: integer
                          example: 2
                        score:
                          type: float
                          example: 5
                        reviewDesc:
                          type: string
                          example: "Excellent packaging. Would order again."
                        createdAt:
                          type: string
                          example: "2020-12-10T18:28:56.000Z"
                        updatedAt:
                          type: string
                          example: "2020-12-10T18:28:56.000Z" 
        "500":
          description: Error
          content:
            application/json:
              schema:
                $ref: "#/definitions/ErrorResponse"
      security:
      - bearerAuth: []
  
definitions:
  userAddFarmerSource:
    properties: 
      username:
        type: string
        example: "username"
      password:
        type: string
        example: "password"
      userId:
        type: string
        example: "1"
      role:
        type: string
        example: "farmer"
      firstName:
        type: string
        example: "Jodie"
      lastName:
        type: string
        example: "Cristobal"
      addressLine:
        type: string
        example: "037 R. Higgins St., Brgy 185"
      city:
        type: string
        example: "La Trinidad"
      province:
        type: string
        example: "Benguet"
      zipcode:
        type: string
        example: "1300"
      latlong:
        type: string
        example: "14.543610, 120.994453"
      farmerType:
        type: string
        example: "livestock/crop/aquaculture/horticulture"
      mainGoods:
        type: string
        example: "dairy/poultry/meat/hide/flower/shrub/sod/fish/shellfish/grain/fiber/fruit/vegetable"
      mobile:
        type: string
        example: "09123456789"
      farmerDesc:
        type: string
        example: "Farmer from La Trinidad, Benguet. Farms Bahay Kubo vegetables. Don\u0027t worry it\u0027s organic" 
  userAddWholesalerSource:
    properties: 
      username:
        type: string
        example: "username"
      password:
        type: string
        example: "password"
      userId:
        type: string
        example: "1"
      role:
        type: string
        example: "wholesaler"
      firstName:
        type: string
        example: "Jodie"
      lastName:
        type: string
        example: "Cristobal"
      storeName:
        type: string
        example: "Cristobal Store"
      addressLine:
        type: string
        example: "037 R. Higgins St., Brgy 185"
      city:
        type: string
        example: "La Trinidad"
      province:
        type: string
        example: "Benguet"
      zipcode:
        type: string
        example: "1300"
      latlong:
        type: string
        example: "14.543610, 120.994453"
      mobile:
        type: string
        example: "09123456789"
      wholesalerDesc:
        type: string
        example: "Interested in procuring vegetables for processing"  

  accessTokenSource:
    properties:
        username:
          type: string
          example: "username"
        password:
          type: string
          example: "password"

  ErrorResponse:
    type: object
    properties:
      success:
        type: boolean
        example: false
      message:
        type: string
        example: "Error message"
              
components:
  examples:
    userAddFarmerSource:
      summary: farmer
      value: 
        username: "username"
        password: "password"
        userId: "1"
        role: "farmer"
        firstName: "Jodie"
        lastName: "Cristobal"
        addressLine: "037 R. Higgins St., Brgy 185"
        city: "La Trinidad"
        province: "Benguet"
        zipcode: "1300"
        latlong: "14.543610, 120.994453"
        farmerType: "livestock/crop/aquaculture/horticulture"
        mainGoods: "dairy/poultry/meat/hide/flower/shrub/sod/fish/shellfish/grain/fiber/fruit/vegetable"
        mobile: "09123456789"
        farmerDesc: "Farmer from La Trinidad, Benguet. Farms Bahay Kubo vegetables. Don\u0027t worry it\u0027s organic" 
    userAddWholesalerSource:
      summary: wholesaler
      value: 
        username: "username"
        password: "password"
        userId: "1"
        role: "wholesaler"
        firstName: "Jodie"
        lastName: "Cristobal"
        storeName: "Cristobal Store"
        addressLine: "037 R. Higgins St., Brgy 185"
        city: "La Trinidad"
        province: "Benguet"
        zipcode: "1300"
        latlong: "14.543610, 120.994453"
        mobile: "09123456789"
        wholesalerDesc: "Interested in procuring vegetables for processing"  

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
